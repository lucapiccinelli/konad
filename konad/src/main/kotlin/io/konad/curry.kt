package io.konad

fun <A, B, RESULT> ((A, B) -> RESULT).curry() = { a: A -> { b: B -> this(a, b) } }
fun <A, B, C, RESULT> ((A, B, C) -> RESULT).curry() = { a: A -> { b: B -> { c: C -> this(a, b, c) } } }
fun <A, B, C, D, RESULT> ((A, B, C, D) -> RESULT).curry() = { a: A -> { b: B -> { c: C -> { d: D -> this(a, b, c, d) } } } }
fun <A, B, C, D, E, RESULT> ((A, B, C, D, E) -> RESULT).curry() = { a: A -> { b: B -> { c: C -> { d: D -> {e: E -> this(a, b, c, d, e) } } } } }
fun <A, B, C, D, E, F, RESULT> ((A, B, C, D, E, F) -> RESULT).curry() = { a: A -> { b: B -> { c: C -> { d: D -> {e: E -> {f: F -> this(a, b, c, d, e, f) } } } } } }
fun <A, B, C, D, E, F, G, RESULT> ((A, B, C, D, E, F, G) -> RESULT).curry() = { a: A -> { b: B -> { c: C -> { d: D -> {e: E -> { f: F -> {g: G -> this(a, b, c, d, e, f, g) } } } } } } }
fun <A, B, C, D, E, F, G, H, RESULT> ((A, B, C, D, E, F, G, H) -> RESULT).curry() = { a: A -> { b: B -> { c: C -> { d: D -> {e: E -> { f: F -> { g: G -> { h: H -> this(a, b, c, d, e, f, g, h) } } } } } } } }
fun <A, B, C, D, E, F, G, H, I, RESULT> ((A, B, C, D, E, F, G, H, I) -> RESULT).curry() = { a: A -> { b: B -> { c: C -> { d: D -> { e: E -> { f: F -> { g: G -> { h: H -> { i: I ->this(a, b, c, d, e, f, g, h, i) } } } } } } } } }
fun <A, B, C, D, E, F, G, H, I, J,RESULT> ((A, B, C, D, E, F, G, H, I, J) -> RESULT).curry() = { a: A -> { b: B -> { c: C -> { d: D -> { e: E -> { f: F -> { g: G -> { h: H -> { i: I -> { j: J ->this(a, b, c, d, e, f, g, h, i, j) } } } } } } } } } }
fun <A, B, C, D, E, F, G, H, I, J, K, RESULT> ((A, B, C, D, E, F, G, H, I, J, K) -> RESULT).curry() = { a: A -> { b: B -> { c: C -> { d: D -> { e: E -> { f: F -> { g: G -> { h: H -> { i: I -> { j: J  -> { k: K -> this(a, b, c, d, e, f, g, h, i, j, k) } } } } } } } } } } }
fun <A, B, C, D, E, F, G, H, I, J, K, L, RESULT> ((A, B, C, D, E, F, G, H, I, J, K, L) -> RESULT).curry() = { a: A -> { b: B -> { c: C -> { d: D -> { e: E -> { f: F -> { g: G -> { h: H -> { i: I -> { j: J  -> { k: K -> { l: L -> this(a, b, c, d, e, f, g, h, i, j, k, l) } } } } } } } } } } } }
fun <A, B, C, D, E, F, G, H, I, J, K, L, M, RESULT> ((A, B, C, D, E, F, G, H, I, J, K, L, M) -> RESULT).curry() = { a: A -> { b: B -> { c: C -> { d: D -> { e: E -> { f: F -> { g: G -> { h: H -> { i: I -> { j: J  -> { k: K -> { l: L -> { m: M -> this(a, b, c, d, e, f, g, h, i, j, k, l, m) } } } } } } } } } } } } }
fun <A, B, C, D, E, F, G, H, I, J, K, L, M, N, RESULT> ((A, B, C, D, E, F, G, H, I, J, K, L, M, N) -> RESULT).curry() = { a: A -> { b: B -> { c: C -> { d: D -> { e: E -> { f: F -> { g: G -> { h: H -> { i: I -> { j: J  -> { k: K -> { l: L -> { m: M -> { n: N -> this(a, b, c, d, e, f, g, h, i, j, k, l, m, n) } } } } } } } } } } } } } }
fun <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, RESULT> ((A, B, C, D, E, F, G, H, I, J, K, L, M, N, O) -> RESULT).curry() = { a: A -> { b: B -> { c: C -> { d: D -> { e: E -> { f: F -> { g: G -> { h: H -> { i: I -> { j: J  -> { k: K -> { l: L -> { m: M -> { n: N -> { o: O -> this(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) } } } } } } } } } } } } } } }
fun <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, RESULT> ((A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P) -> RESULT).curry() = { a: A -> { b: B -> { c: C -> { d: D -> { e: E -> { f: F -> { g: G -> { h: H -> { i: I -> { j: J  -> { k: K -> { l: L -> { m: M -> { n: N -> { o: O -> { p: P -> this(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) } } } } } } } } } } } } } } } }
fun <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, RESULT> ((A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q) -> RESULT).curry() = { a: A -> { b: B -> { c: C -> { d: D -> { e: E -> { f: F -> { g: G -> { h: H -> { i: I -> { j: J  -> { k: K -> { l: L -> { m: M -> { n: N -> { o: O -> { p: P -> { q: Q -> this(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) } } } } } } } } } } } } } } } } }
fun <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, RESULT> ((A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R) -> RESULT).curry() = { a: A -> { b: B -> { c: C -> { d: D -> { e: E -> { f: F -> { g: G -> { h: H -> { i: I -> { j: J  -> { k: K -> { l: L -> { m: M -> { n: N -> { o: O -> { p: P -> { q: Q -> { r: R -> this(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) } } } } } } } } } } } } } } } } } }
fun <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, RESULT> ((A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S) -> RESULT).curry() = { a: A -> { b: B -> { c: C -> { d: D -> { e: E -> { f: F -> { g: G -> { h: H -> { i: I -> { j: J  -> { k: K -> { l: L -> { m: M -> { n: N -> { o: O -> { p: P -> { q: Q -> { r: R -> { s:S -> this(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) } } } } } } } } } } } } } } } } } } }
fun <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, RESULT> ((A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T) -> RESULT).curry() = { a: A -> { b: B -> { c: C -> { d: D -> { e: E -> { f: F -> { g: G -> { h: H -> { i: I -> { j: J  -> { k: K -> { l: L -> { m: M -> { n: N -> { o: O -> { p: P -> { q: Q -> { r: R -> { s: S -> { t: T -> this(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) } } } } } } } } } } } } } } } } } } } }
fun <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, RESULT> ((A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U) -> RESULT).curry() = { a: A -> { b: B -> { c: C -> { d: D -> { e: E -> { f: F -> { g: G -> { h: H -> { i: I -> { j: J  -> { k: K -> { l: L -> { m: M -> { n: N -> { o: O -> { p: P -> { q: Q -> { r: R -> { s: S -> { t: T -> { u: U -> this(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u) } } } } } } } } } } } } } } } } } } } } }
fun <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, RESULT> ((A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V) -> RESULT).curry() = { a: A -> { b: B -> { c: C -> { d: D -> { e: E -> { f: F -> { g: G -> { h: H -> { i: I -> { j: J  -> { k: K -> { l: L -> { m: M -> { n: N -> { o: O -> { p: P -> { q: Q -> { r: R -> { s: S -> { t: T -> { u: U -> { v: V -> this(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v) } } } } } } } } } } } } } } } } } } } } } }
fun <A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, RESULT> ((A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W) -> RESULT).curry() = { a: A -> { b: B -> { c: C -> { d: D -> { e: E -> { f: F -> { g: G -> { h: H -> { i: I -> { j: J  -> { k: K -> { l: L -> { m: M -> { n: N -> { o: O -> { p: P -> { q: Q -> { r: R -> { s: S -> { t: T -> { u: U -> { v: V -> { w: W -> this(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w) } } } } } } } } } } } } } } } } } } } } } } }
